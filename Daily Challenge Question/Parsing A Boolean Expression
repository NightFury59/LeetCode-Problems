var parseBoolExpr = function(expression) {
    let stack = [];

    for (let char of expression) {
        if (char === ',' || char === '(') continue;

        if (char === 't' || char === 'f' || char === '!' || char === '&' || char === '|') {
            stack.push(char);
        } else if (char === ')') {
            let hasTrue = false, hasFalse = false;

            while (stack[stack.length - 1] !== '!' && stack[stack.length - 1] !== '&' && stack[stack.length - 1] !== '|') {
                let top = stack.pop();
                if (top === 't') hasTrue = true;
                if (top === 'f') hasFalse = true;
            }

            let operator = stack.pop();
            if (operator === '!') {
                stack.push(hasTrue ? 'f' : 't');
            } else if (operator === '&') {
                stack.push(hasFalse ? 'f' : 't');
            } else {
                stack.push(hasTrue ? 't' : 'f');
            }
        }
    }

    return stack[0] === 't';
};
