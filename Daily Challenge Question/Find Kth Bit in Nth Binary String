var findKthBit = function(n, k) {
    if (n === 1) return '0';
    
    let length = (1 << (n - 1)) - 1;  // 2^(n-1) - 1
    
    if (k === length + 1) return '1';
    
    if (k <= length) {
        return findKthBit(n - 1, k);
    } else {
        let mirroredIndex = 2 * length + 2 - k;
        let bit = findKthBit(n - 1, mirroredIndex);
        return invert(bit);
    }
};

function invert(bit) {
    return bit === '0' ? '1' : '0';
}
