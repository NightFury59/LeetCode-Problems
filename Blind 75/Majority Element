Solution 1 - Less Optimized

# Time Complexity O(n) | Space Complexity O(n)

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        count = {}
        res, maxCount = 0, 0

        for n in nums:
            count[n] = 1 + count.get(n, 0)
            res = n if count[n] > maxCount else res
            maxCount = max(count[n], maxCount)

        return res

Solution - More optimized

# Time Complexity O(n) | Space Complexity O(1)

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        result = 0
        count = 0

        for n in nums:
            if count == 0:
                res = n
            count += (1 if res == n else -1)
        return res
